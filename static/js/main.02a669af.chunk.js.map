{"version":3,"sources":["ColorModeSwitcher.js","Components/Header.js","Components/ethereum/web3.js","Components/ethereum/matchCreator.js","Components/ethereum/app1.js","Components/TabPanels/MatchDetails/showTeams.js","Components/icons/Bnb.js","Components/TabPanels/MatchDetails/statistics.js","Components/TabPanels/MatchDetails.js","Components/TabPanels/MatchsList.js","Components/TabPanels/LandingPage.js","Components/Tab.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","Header","web3","p","justifySelf","Web3","require","window","givenProvider","provider","providers","HttpProvider","instance","eth","Contract","matchCreator","abi","address","app1","ShowTeams","state","team1","team2","minimum","date","a","this","loadBlockchainData","dispatch","match","methods","nameTeam1","call","nameTeam2","getStats","summary","setState","textAlign","isTruncated","orientation","Component","Bnb","viewBox","fill","d","Statistics","counterBetsTeam1","counterBetsTeam2","counterBetsEqual","gamblerteam1","gamblerteam2","gamblerEqual","winner","poolPrize","profitsToTake","betsOpen","padding","mb","columns","spacing","w","toFixed","MatchDetails","matchSelected","manager","matchs","loading","creator","contracts","number","i","matchsDetails","list","push","matchAddress","colSpan","width","height","borderWidth","borderRadius","margin","MatchsList","h","templateColumns","gap","as","speed","emptyColor","slice","map","outlineColor","LandingPage","MatchsTab","colorScheme","isFitted","isLazy","isManual","isDisabled","App","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02a669af.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\r\nimport { Box, Flex, Spacer, Heading } from '@chakra-ui/react';\r\nimport { ColorModeSwitcher } from '../ColorModeSwitcher';\r\n\r\nfunction Header() {\r\n  return (    \r\n        <Flex>\r\n            <Box p=\"2\">\r\n              <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n            </Box>\r\n            <Spacer />\r\n            <Box p=\"2\">\r\n              <Heading size=\"lg\">Fulbo</Heading>\r\n            </Box>\r\n            <Spacer />\r\n            <Box p=\"2\">\r\n              <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n            </Box>\r\n        </Flex>        \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const Web3 = require(\"web3\");\r\n\r\nlet web3;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\r\n    //we are in the browser and metamask is running\r\n    web3 = new Web3 (Web3.givenProvider);\r\n}else {\r\n    //we are on the server or the user don't have metamask\r\n    const provider = new Web3.providers.HttpProvider(\r\n        \"https://data-seed-prebsc-1-s1.binance.org:8545\"\r\n    );\r\n    web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;\r\n","import web3 from \"./web3\";\r\nimport matchCreator from \"./build/contracts/matchCreator.json\";\r\n\r\nconst instance = new web3.eth.Contract(matchCreator.abi,\r\n    \"0x3a5FD2387f309cEC1df7942AD0D4A4EEa4986C09\");\r\n\r\n\r\nexport default instance","import web3 from \"./web3\";\r\nimport app1 from \"./build/contracts/App1.json\";\r\n\r\nexport default (address) => {\r\n    return new web3.eth.Contract(app1.abi,\r\n        address);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport app1 from \"../../ethereum/app1\";\r\nimport { Text, VStack, Divider, Spinner } from \"@chakra-ui/react\";\r\n\r\nclass ShowTeams extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            team1: \"\",\r\n            team2: \"\",\r\n            minimum: null,\r\n            date: \"\",       \r\n        }\r\n    }\r\n      \r\n    async componentDidMount() {        \r\n        await this.loadBlockchainData(this.props.dispatch)     \r\n    } \r\n  \r\n    async loadBlockchainData(dispatch) {\r\n        let address = this.props.match.address\r\n        const match = await app1(address);        \r\n        const team1 = await match.methods.nameTeam1().call();\r\n        const team2 = await match.methods.nameTeam2().call();\r\n        const summary = await match.methods.getStats().call();        \r\n    \r\n        this.setState({team1, team2, date: summary[10], minimum: summary[11]})          \r\n    } \r\n\r\n    async componentDidUpdate() {\r\n        let address = this.props.match.address\r\n        const match = await app1(address);        \r\n        const team1 = await match.methods.nameTeam1().call();\r\n        const team2 = await match.methods.nameTeam2().call();\r\n        const summary = await match.methods.getStats().call();\r\n        \r\n        this.setState({team1, team2, date: summary[10], minimum: summary[11]})\r\n    }    \r\n  \r\n    render(){ \r\n\r\n        return (\r\n            <VStack>                \r\n                <Text fontSize=\"2xl\" textAlign=\"center\" isTruncated>\r\n                    {this.state.team1} - {this.state.team2}                            \r\n                </Text>\r\n                <Divider orientation=\"horizontal\" />                        \r\n                  <Text fontSize=\"xl\" textAlign=\"center\">{this.state.date}</Text>\r\n                  <Text fontSize=\"xl\" textAlign=\"center\">Apuesta minima: {(this.state.minimum)/10**18} BNB</Text>\r\n                <Divider orientation=\"horizontal\" />\r\n            </VStack>\r\n        )\r\n    }  \r\n}\r\n  \r\nexport default ShowTeams","import React from 'react';\r\nimport { Icon } from '@chakra-ui/react';\r\n\r\nexport const Bnb = (props) => (\r\n  <Icon viewBox=\"0 0 2000 2000\" {...props}>\r\n    <g fill=\"#f3ba2f\"><path d=\"M611.59 840.42l388.4-388.39 388.6 388.59 226-226L999.99 0 385.6 614.42l225.99 226M.006 999.969l226.007-226.007 225.992 225.993L226 1225.96zM611.59 1159.58l388.4 388.39 388.59-388.58 226.12 225.88-.11.12L999.99 2000l-614.41-614.4-.32-.32 226.33-225.7M1548.013 1000.093l226.007-226.006 225.992 225.992-226.006 226.007z\"/><path d=\"M1229.22 999.88h.1L999.99 770.55 830.51 940.03h-.01l-19.47 19.48-40.16 40.17-.32.31.32.33 229.12 229.13 229.33-229.33.11-.13-.21-.11\"/></g>\r\n  </Icon>\r\n);\r\n","import React, {Component} from \"react\";\r\nimport app1 from \"../../ethereum/app1\";\r\nimport {Bnb} from \"../../icons/Bnb\"\r\nimport { SimpleGrid, Stat, StatLabel, StatGroup, StatNumber, VStack, Divider, Text } from \"@chakra-ui/react\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nclass Statistics extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      counterBetsTeam1: null,\r\n      counterBetsTeam2: null,\r\n      counterBetsEqual:null,\r\n      gamblerteam1:null,\r\n      gamblerteam2:null,\r\n      gamblerEqual:null,\r\n      winner:null,\r\n      poolPrize:null,\r\n      profitsToTake:null,\r\n      betsOpen:null,\r\n      team1:\"\",\r\n      team2:\"\",      \r\n    }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    await this.loadBlockchainData(this.props.dispatch)     \r\n  } \r\n\r\n  async loadBlockchainData(props) {\r\n    let address = this.props.match.address;\r\n    const match = await app1(address);    \r\n    const summary = await match.methods.getStats().call();\r\n    const team1 = await match.methods.nameTeam1().call();\r\n    const team2 = await match.methods.nameTeam2().call();    \r\n    \r\n    this.setState({\r\n      counterBetsTeam1: summary[0],\r\n      counterBetsTeam2: summary[1] ,\r\n      counterBetsEqual: summary[2],\r\n      gamblerteam1: summary[3],\r\n      gamblerteam2: summary[4],\r\n      gamblerEqual: summary[5],\r\n      winner: summary[6],\r\n      poolPrize: summary[7],\r\n      profitsToTake: summary[8],\r\n      betsOpen: summary[9],\r\n      team1,\r\n      team2,      \r\n    })\r\n  }\r\n  \r\n  async componentDidUpdate() {\r\n    let address = this.props.match.address;  \r\n    const match = await app1(address);\r\n    const summary = await match.methods.getStats().call(); \r\n    this.setState({\r\n      counterBetsTeam1: summary[0],\r\n      counterBetsTeam2: summary[1] ,\r\n      counterBetsEqual: summary[2],\r\n      gamblerteam1: summary[3],\r\n      gamblerteam2: summary[4],\r\n      gamblerEqual: summary[5],\r\n      winner: summary[6],\r\n      poolPrize: summary[7],\r\n      profitsToTake: summary[8],      \r\n    })       \r\n  }\r\n\r\n  render(props){       \r\n    return (\r\n      <VStack>\r\n        <StatGroup fontSize=\"l\" padding= \"3\">  \r\n          <Divider orientation=\"horizontal\" />                        \r\n            <Text textAlign=\"center\">Estadisticas</Text>            \r\n          <Divider mb=\"5\" orientation=\"horizontal\" />\r\n\r\n          {this.state.winner == \"0\" ? (\"\") :  \r\n          <SimpleGrid columns={2} spacing={4} w=\"100%\">\r\n              <Stat textAlign=\"center\" >\r\n                  <StatLabel>Total en premios</StatLabel>\r\n                  <StatNumber>{this.state.poolPrize/10**18} <Bnb /> \r\n                  </StatNumber>\r\n              </Stat>\r\n              <Stat textAlign=\"center\">\r\n                  <StatLabel >Premios por cobrar</StatLabel>\r\n                  <StatNumber>{(this.state.profitsToTake/10**18).toFixed(2)} <Bnb />\r\n                  </StatNumber>\r\n              </Stat>\r\n              <Divider mb=\"5\" orientation=\"horizontal\" />\r\n          </SimpleGrid>}\r\n          \r\n          <SimpleGrid columns={3} spacing={4} w=\"100%\">\r\n            <VStack>\r\n              <Stat >\r\n                <StatLabel >Apuestas por {this.state.team1} </StatLabel>\r\n                <StatNumber textAlign=\"center\">{this.state.counterBetsTeam1/10**18} <Bnb />\r\n                </StatNumber>\r\n              </Stat>    \r\n              <Stat>\r\n                <StatLabel>Hinchaz de {this.state.team1}</StatLabel>\r\n                <StatNumber textAlign=\"center\">{this.state.gamblerteam1}</StatNumber>\r\n              </Stat>\r\n            </VStack>\r\n            <VStack>\r\n              <Stat>\r\n                <StatLabel>Apuestas por empate</StatLabel>\r\n                <StatNumber textAlign=\"center\">{this.state.counterBetsEqual/10**18} <Bnb />\r\n                </StatNumber>\r\n              </Stat>  \r\n              <Stat>\r\n                <StatLabel>Apostadores</StatLabel>\r\n                <StatNumber textAlign=\"center\">{this.state.gamblerEqual}</StatNumber>\r\n              </Stat>\r\n            </VStack>\r\n            <VStack>\r\n              <Stat>\r\n                <StatLabel>Apuestas por {this.state.team2}</StatLabel>\r\n                <StatNumber textAlign=\"center\">{this.state.counterBetsTeam2/10**18} <Bnb />\r\n                </StatNumber>\r\n              </Stat>    \r\n              <Stat>\r\n                <StatLabel>Hinchaz de {this.state.team2}</StatLabel>\r\n                <StatNumber textAlign=\"center\">{this.state.gamblerteam2}</StatNumber>\r\n              </Stat>\r\n            </VStack>\r\n          </SimpleGrid>\r\n        </StatGroup>            \r\n      </VStack>\r\n    )\r\n  }  \r\n}\r\n\r\nexport default Statistics","import React, { Component } from 'react';\r\nimport { Text, Box, GridItem } from \"@chakra-ui/react\"\r\nimport creator from \"../ethereum/matchCreator\"\r\nimport ShowTeams from \"./MatchDetails/showTeams\"\r\nimport Statistics from \"./MatchDetails/statistics\"\r\n\r\nclass MatchDetails extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      matchSelected: null,\r\n      manager: null,\r\n      matchs: [],\r\n      loading: true,\r\n      matchSelected: null,     \r\n    }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    await this.loadBlockchainData(this.props.dispatch)\r\n  } \r\n \r\n  async loadBlockchainData(dispatch) {\r\n    const manager = await creator.methods.manager().call();\r\n    let number = await creator.methods.contracts().call();    \r\n    let matchs = []\r\n    let list;\r\n    var i\r\n    for(i = 0; i < number; i++ ) {\r\n     list = await creator.methods.matchsDetails(i).call()\r\n     matchs.push({\r\n       address: list.matchAddress,\r\n       team1: list.team1,\r\n       team2: list.team2,\r\n       minimum: list.minimum,\r\n       date: list.date\r\n     }) \r\n    }   \r\n\r\n    this.setState({manager, matchs, loading: false}) \r\n  }     \r\n\r\n  render(){\r\n    if(this.props.match == null){\r\n      return (\r\n        <GridItem colSpan={5}>\r\n        <Box width=\"full\" height=\"full\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"2\" margin=\"2\">\r\n          <Text> No hay match </Text>\r\n        </Box>   \r\n      </GridItem>\r\n      )\r\n    } else {   \r\n    return( \r\n      <GridItem colSpan={5}>\r\n        <Box width=\"full\" height=\"full\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"2\" margin=\"2\">          \r\n          <ShowTeams match = {this.props.match} />\r\n          <Statistics match = {this.props.match} />\r\n        </Box>   \r\n      </GridItem>\r\n    )\r\n    }  \r\n  }\r\n}\r\n\r\nexport default MatchDetails\r\n","import React, { Component } from 'react';\r\nimport { Text, Grid, Box, Divider, GridItem, Spinner, Button } from \"@chakra-ui/react\"\r\nimport creator from \"../ethereum/matchCreator\"\r\nimport MatchDetails from './MatchDetails';\r\n\r\nclass MatchsList extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      manager: null,\r\n      matchs: [],\r\n      loading: true,\r\n      matchSelected: null,\r\n      size: 1,   \r\n    }\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    await this.loadBlockchainData(this.props.dispatch)\r\n  } \r\n\r\n  async loadBlockchainData(dispatch) {\r\n    const manager = await creator.methods.manager().call();\r\n    let number = await creator.methods.contracts().call();    \r\n    let matchs = []\r\n    let list;\r\n    var i = (number - 1)\r\n    for(; i >= 0 ; i-- ) {\r\n     list = await creator.methods.matchsDetails(i).call()\r\n     matchs.push({\r\n       address: list.matchAddress,\r\n       team1: list.team1,\r\n       team2: list.team2,\r\n       minimum: list.minimum,\r\n       date: list.date\r\n     }) \r\n    }   \r\n\r\n    this.setState({manager, matchs, loading: false }) \r\n  } \r\n\r\n  async componentDidUpdate() {\r\n    let number = await creator.methods.contracts().call();    \r\n    let matchs = []\r\n    let list;\r\n    var i = (number - 1)\r\n    for(; i >= 0 ; i-- ) {\r\n     list = await creator.methods.matchsDetails(i).call()\r\n     matchs.push({\r\n       address: list.matchAddress,\r\n       team1: list.team1,\r\n       team2: list.team2,\r\n       minimum: list.minimum,\r\n       date: list.date,       \r\n     }) \r\n    }   \r\n  }\r\n\r\n  render(){       \r\n    \r\n    if(this.state.loading === true ) { \r\n      return ( \r\n        <Grid\r\n          p=\"3\"\r\n          h=\"xl\"          \r\n          templateColumns=\"repeat(7, 1fr)\"\r\n          gap={4}\r\n        >\r\n          <GridItem colSpan={2}>\r\n            <Box as=\"button\" width=\"full\" h=\"full\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"2\" margin=\"2\">\r\n              <Spinner  \r\n                speed=\"0.85s\"\r\n                emptyColor=\"gray.200\"\r\n                size=\"xl\" \r\n              />\r\n            </Box> \r\n          </GridItem>\r\n          <MatchDetails /> \r\n        </Grid>\r\n      ) \r\n    } else { \r\n      return(  \r\n        <Grid\r\n          p=\"3\"\r\n          h=\"xl\"          \r\n          templateColumns=\"repeat(7, 1fr)\"\r\n          gap={4}\r\n        > \r\n          <GridItem colSpan={2} >\r\n            {this.state.matchs.slice(0, this.state.size).map(({address, team1, team2, minimum, date})=> (\r\n              <Box \r\n                as=\"button\" width=\"full\" outlineColor=\"#90CDF4\" \r\n                borderWidth=\"1px\" borderRadius=\"lg\" p=\"2\" margin=\"2\" key={address}\r\n                onClick = { () => this.setState( {matchSelected: {address} }) } >\r\n                <Text fontSize=\"xl\" textAlign=\"center\" isTruncated>\r\n                  {team1} - {team2}\r\n                  <br></br>             \r\n                </Text>\r\n                <Divider orientation=\"horizontal\" />                        \r\n                <Text textAlign=\"center\">{date}</Text>\r\n                <Text textAlign=\"center\">Apuesta minima: {(minimum)/10**18}</Text>\r\n              </Box>                         \r\n            ))}\r\n            <Button onClick={ () => this.setState({size: this.state.size + 1}) } >Uno mas</Button>\r\n          </GridItem> \r\n            <MatchDetails match={this.state.matchSelected} /> \r\n        </Grid>\r\n      )}\r\n  }  \r\n}\r\n\r\nexport default MatchsList","import React from 'react';\r\nimport {\r\n  GridItem\r\n} from '@chakra-ui/react';\r\n\r\nfunction LandingPage() {\r\n  return (    \r\n    <p>Landing Page</p>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { Grid, Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\"\r\nimport MatchDetails from \"./TabPanels/MatchDetails\"\r\nimport Matchslist from \"./TabPanels/MatchsList\"\r\nimport LandingPage from \"./TabPanels/LandingPage\"\r\n\r\nfunction MatchsTab() {\r\n  return (    \r\n    <Tabs variant=\"soft-rounded\" p=\"2\" colorScheme=\"green\" isFitted isLazy isManual>\r\n      <TabList>\r\n        <Tab>Inicio</Tab>\r\n        <Tab isDisabled></Tab>\r\n        <Tab>Partidos</Tab>\r\n      </TabList>\r\n      <TabPanels>\r\n        <TabPanel>\r\n          <LandingPage />\r\n        </TabPanel>\r\n        <TabPanel />\r\n        <TabPanel>\r\n          <Matchslist />                      \r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>                \r\n  );\r\n}\r\n\r\nexport default MatchsTab;","import React from 'react';\nimport { ChakraProvider, Box, theme } from '@chakra-ui/react';\nimport Header from \"./Components/Header\"\nimport MatchsTab from \"./Components/Tab\"\n\nfunction App() {\n  return (    \n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Header />\n        <MatchsTab />         \n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}